{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\liron\\\\Desktop\\\\FullStack\\\\Training\\\\todo_list_training\\\\ToDo_List_testing\\\\Client\\\\src\\\\Cmps\\\\ToDoList\\\\TaskCmp.jsx\";\nimport React from \"react\";\nimport { Draggable } from \"react-beautiful-dnd\";\nexport default function TaskCmp(props) {\n  const status_task = props.task.status;\n  const task_id = props.task.task_id; // const change_color_of_item = (isDragging, id, draggingOver) => {\n  //   if (isDragging) {\n  //     document.getElementById(id).classList.add(\"isdragging\");\n  //   } else {\n  //     if (document.querySelector(`#${id}`)) {\n  //       document.getElementById(id).classList.remove(\"isdragging\");\n  //     }\n  //   }\n  // };\n\n  return /*#__PURE__*/_jsxDEV(Draggable, {\n    draggableId: `${props.number1}`,\n    index: props.number,\n    children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"task_li\",\n      id: `${task_id}`,\n      ...provided.draggableProps,\n      ...provided.dragHandleProps,\n      ref: provided.innerRef // isdragging={change_color_of_item(\n      //   snapshot.isDragging,\n      //   task_id,\n      //   snapshot.draggingOver\n      // )}\n      ,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => {\n          props.delete(task_id);\n        },\n        children: \"delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: props.task.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: props.task.descriptiio\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: props.task.date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => {\n          props.move(task_id, \"done\");\n        },\n        children: \"done\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => {\n          let value_status = \"\";\n\n          switch (status_task) {\n            case \"todo\":\n              value_status = \"in_pragress\";\n              break;\n\n            case \"in_pragress\":\n              value_status = \"done\";\n              break;\n\n            case \"done\":\n              value_status = \"todo\";\n          }\n\n          props.move(task_id, value_status);\n        },\n        children: \"move\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_c = TaskCmp;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskCmp\");","map":{"version":3,"sources":["C:/Users/liron/Desktop/FullStack/Training/todo_list_training/ToDo_List_testing/Client/src/Cmps/ToDoList/TaskCmp.jsx"],"names":["React","Draggable","TaskCmp","props","status_task","task","status","task_id","number1","number","provided","snapshot","draggableProps","dragHandleProps","innerRef","delete","title","descriptiio","date","move","value_status"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,qBAA1B;AAEA,eAAe,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AACrC,QAAMC,WAAW,GAAGD,KAAK,CAACE,IAAN,CAAWC,MAA/B;AACA,QAAMC,OAAO,GAAGJ,KAAK,CAACE,IAAN,CAAWE,OAA3B,CAFqC,CAKrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAKA,sBAEE,QAAC,SAAD;AAAW,IAAA,WAAW,EAAG,GAAEJ,KAAK,CAACK,OAAQ,EAAzC;AAA4C,IAAA,KAAK,EAAEL,KAAK,CAACM,MAAzD;AAAA,cAGG,CAACC,QAAD,EAAUC,QAAV,kBACC;AACE,MAAA,SAAS,EAAC,SADZ;AAEE,MAAA,EAAE,EAAG,GAAEJ,OAAQ,EAFjB;AAAA,SAGMG,QAAQ,CAACE,cAHf;AAAA,SAIMF,QAAQ,CAACG,eAJf;AAKE,MAAA,GAAG,EAAEH,QAAQ,CAACI,QALhB,CAME;AACA;AACA;AACA;AACA;AAVF;AAAA,8BAYE;AACE,QAAA,OAAO,EAAE,MAAM;AACbX,UAAAA,KAAK,CAACY,MAAN,CAAaR,OAAb;AACD,SAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZF,eAmBE;AAAA,kBAAOJ,KAAK,CAACE,IAAN,CAAWW;AAAlB;AAAA;AAAA;AAAA;AAAA,cAnBF,eAoBE;AAAA,kBAAOb,KAAK,CAACE,IAAN,CAAWY;AAAlB;AAAA;AAAA;AAAA;AAAA,cApBF,eAqBE;AAAA,kBAAOd,KAAK,CAACE,IAAN,CAAWa;AAAlB;AAAA;AAAA;AAAA;AAAA,cArBF,eAsBE;AACE,QAAA,OAAO,EAAE,MAAM;AACbf,UAAAA,KAAK,CAACgB,IAAN,CAAWZ,OAAX,EAAoB,MAApB;AACD,SAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAtBF,eA6BE;AACE,QAAA,OAAO,EAAE,MAAM;AACb,cAAIa,YAAY,GAAG,EAAnB;;AACA,kBAAQhB,WAAR;AACE,iBAAK,MAAL;AACEgB,cAAAA,YAAY,GAAG,aAAf;AACA;;AACF,iBAAK,aAAL;AACEA,cAAAA,YAAY,GAAG,MAAf;AACA;;AACF,iBAAK,MAAL;AACEA,cAAAA,YAAY,GAAG,MAAf;AARJ;;AAUAjB,UAAAA,KAAK,CAACgB,IAAN,CAAWZ,OAAX,EAAoBa,YAApB;AACD,SAdH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA7BF;AAAA;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,UAFF;AAyDD;KA3EuBlB,O","sourcesContent":["import React from \"react\";\r\nimport { Draggable } from \"react-beautiful-dnd\";\r\n\r\nexport default function TaskCmp(props) {\r\n  const status_task = props.task.status;\r\n  const task_id = props.task.task_id;\r\n\r\n\r\n  // const change_color_of_item = (isDragging, id, draggingOver) => {\r\n  //   if (isDragging) {\r\n  //     document.getElementById(id).classList.add(\"isdragging\");\r\n  //   } else {\r\n  //     if (document.querySelector(`#${id}`)) {\r\n  //       document.getElementById(id).classList.remove(\"isdragging\");\r\n  //     }\r\n  //   }\r\n  // };\r\n  \r\n \r\n \r\n\r\n  return (\r\n    \r\n    <Draggable draggableId={`${props.number1}`} index={props.number}>\r\n    \r\n\r\n      {(provided,snapshot) => (\r\n        <li\r\n          className=\"task_li\"\r\n          id={`${task_id}`}\r\n          {...provided.draggableProps}\r\n          {...provided.dragHandleProps}\r\n          ref={provided.innerRef}\r\n          // isdragging={change_color_of_item(\r\n          //   snapshot.isDragging,\r\n          //   task_id,\r\n          //   snapshot.draggingOver\r\n          // )}\r\n        >\r\n          <div\r\n            onClick={() => {\r\n              props.delete(task_id);\r\n            }}\r\n          >\r\n            delete\r\n          </div>\r\n          <span>{props.task.title}</span>\r\n          <span>{props.task.descriptiio}</span>\r\n          <span>{props.task.date}</span>\r\n          <div\r\n            onClick={() => {\r\n              props.move(task_id, \"done\");\r\n            }}\r\n          >\r\n            done\r\n          </div>\r\n          <div\r\n            onClick={() => {\r\n              let value_status = \"\";\r\n              switch (status_task) {\r\n                case \"todo\":\r\n                  value_status = \"in_pragress\";\r\n                  break;\r\n                case \"in_pragress\":\r\n                  value_status = \"done\";\r\n                  break;\r\n                case \"done\":\r\n                  value_status = \"todo\";\r\n              }\r\n              props.move(task_id, value_status);\r\n            }}\r\n          >\r\n            move\r\n          </div>\r\n        </li>\r\n      )}\r\n    </Draggable>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}