{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\liron\\\\Desktop\\\\FullStack\\\\Projects\\\\ToDoList-Git\\\\ToDoList\\\\ToDoList\\\\Client\\\\src\\\\Cmps\\\\ToDoList\\\\TaskCmp.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Draggable } from \"react-beautiful-dnd\";\nexport default function TaskCmp(props) {\n  _s();\n\n  const classes = useStyles();\n  const status_task = props.task.status;\n  const task_id = props.task.task_id;\n  return /*#__PURE__*/_jsxDEV(Draggable, {\n    draggableId: `${props.unique_id}`,\n    index: props.number,\n    children: provided => /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"task_card\",\n      ...provided.draggableProps,\n      ...provided.dragHandleProps,\n      ref: provided.innerRef,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => {\n          props.delete(task_id);\n        },\n        children: \"delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: props.task.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: props.task.descriptiio\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: props.task.date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => {\n          props.move(task_id, \"done\");\n        },\n        children: \"done\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => {\n          let value_status = \"\";\n\n          switch (status_task) {\n            case \"todo\":\n              value_status = \"in_pragress\";\n              break;\n\n            case \"in_pragress\":\n              value_status = \"done\";\n              break;\n\n            case \"done\":\n              value_status = \"todo\";\n          }\n\n          props.move(task_id, value_status);\n        },\n        children: \"move\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TaskCmp, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", true);\n\n_c = TaskCmp;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskCmp\");","map":{"version":3,"sources":["C:/Users/liron/Desktop/FullStack/Projects/ToDoList-Git/ToDoList/ToDoList/Client/src/Cmps/ToDoList/TaskCmp.jsx"],"names":["React","Draggable","TaskCmp","props","classes","useStyles","status_task","task","status","task_id","unique_id","number","provided","draggableProps","dragHandleProps","innerRef","delete","title","descriptiio","date","move","value_status"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,qBAA1B;AAQA,eAAe,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA;;AACrC,QAAMC,OAAO,GAAGC,SAAS,EAAzB;AACA,QAAMC,WAAW,GAAGH,KAAK,CAACI,IAAN,CAAWC,MAA/B;AACA,QAAMC,OAAO,GAAGN,KAAK,CAACI,IAAN,CAAWE,OAA3B;AAEA,sBACE,QAAC,SAAD;AAAW,IAAA,WAAW,EAAG,GAAEN,KAAK,CAACO,SAAU,EAA3C;AAA8C,IAAA,KAAK,EAAEP,KAAK,CAACQ,MAA3D;AAAA,cACIC,QAAD,iBACC;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA,SACMA,QAAQ,CAACC,cADf;AAAA,SAEMD,QAAQ,CAACE,eAFf;AAGE,MAAA,GAAG,EAAEF,QAAQ,CAACG,QAHhB;AAAA,8BAKE;AACE,QAAA,OAAO,EAAE,MAAM;AACbZ,UAAAA,KAAK,CAACa,MAAN,CAAaP,OAAb;AACD,SAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eAaE;AAAA,kBAAON,KAAK,CAACI,IAAN,CAAWU;AAAlB;AAAA;AAAA;AAAA;AAAA,cAbF,eAcE;AAAA,kBAAOd,KAAK,CAACI,IAAN,CAAWW;AAAlB;AAAA;AAAA;AAAA;AAAA,cAdF,eAeE;AAAA,kBAAOf,KAAK,CAACI,IAAN,CAAWY;AAAlB;AAAA;AAAA;AAAA;AAAA,cAfF,eAgBE;AACE,QAAA,OAAO,EAAE,MAAM;AACbhB,UAAAA,KAAK,CAACiB,IAAN,CAAWX,OAAX,EAAoB,MAApB;AACD,SAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBF,eAwBE;AACE,QAAA,OAAO,EAAE,MAAM;AACb,cAAIY,YAAY,GAAG,EAAnB;;AACA,kBAAQf,WAAR;AACE,iBAAK,MAAL;AACEe,cAAAA,YAAY,GAAG,aAAf;AACA;;AACF,iBAAK,aAAL;AACEA,cAAAA,YAAY,GAAG,MAAf;AACA;;AACF,iBAAK,MAAL;AACEA,cAAAA,YAAY,GAAG,MAAf;AARJ;;AAUAlB,UAAAA,KAAK,CAACiB,IAAN,CAAWX,OAAX,EAAoBY,YAApB;AACD,SAdH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAxBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UADF;AAiDD;;GAtDuBnB,O;;KAAAA,O","sourcesContent":["import React from \"react\";\r\nimport { Draggable } from \"react-beautiful-dnd\";\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default function TaskCmp(props) {\r\n  const classes = useStyles();\r\n  const status_task = props.task.status;\r\n  const task_id = props.task.task_id;\r\n\r\n  return (\r\n    <Draggable draggableId={`${props.unique_id}`} index={props.number}>\r\n      {(provided) => (\r\n        <li className='task_card'\r\n          {...provided.draggableProps}\r\n          {...provided.dragHandleProps}\r\n          ref={provided.innerRef}\r\n        >\r\n          <div\r\n            onClick={() => {\r\n              props.delete(task_id);\r\n            }}\r\n          >\r\n            delete\r\n          </div>\r\n          \r\n          <span>{props.task.title}</span>\r\n          <span>{props.task.descriptiio}</span>\r\n          <span>{props.task.date}</span>\r\n          <div\r\n            onClick={() => {\r\n              props.move(task_id, \"done\");\r\n            }}\r\n          >\r\n            done\r\n          </div>\r\n     \r\n          <div\r\n            onClick={() => {\r\n              let value_status = \"\";\r\n              switch (status_task) {\r\n                case \"todo\":\r\n                  value_status = \"in_pragress\";\r\n                  break;\r\n                case \"in_pragress\":\r\n                  value_status = \"done\";\r\n                  break;\r\n                case \"done\":\r\n                  value_status = \"todo\";\r\n              }\r\n              props.move(task_id, value_status);\r\n            }}\r\n          >\r\n            move\r\n          </div>\r\n        </li>\r\n      )}\r\n    </Draggable>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}