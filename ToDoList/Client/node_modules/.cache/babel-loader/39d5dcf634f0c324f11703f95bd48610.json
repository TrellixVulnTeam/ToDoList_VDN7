{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\liron\\\\Desktop\\\\FullStack\\\\Training\\\\todo_list_training\\\\ToDo_List\\\\Client\\\\src\\\\index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport initial_data from \"./initialData\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport Column_cmp from \"./Cmps/Column_cmp\";\nimport { DragDropContext } from \"react-beautiful-dnd\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = initial_data;\n\n    this.onDragEnd = result => {\n      const {\n        destination,\n        source,\n        draggablId\n      } = result;\n\n      if (!destination) {\n        return;\n      }\n\n      if (destination.draggablId === source.draggablId && destination.index === source.index) {\n        return;\n      }\n\n      const column = this.state.columns[source.draggablId];\n      const newTaskId = Array.from(column.taskIds);\n      newTaskId.splice();\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: this.onDragEnd,\n      children: this.state.columnOder.map(column_id => {\n        const column = this.state.columns[column_id],\n              tasks = column.taskIds.map(task_id => this.state.tasks[task_id]);\n        return /*#__PURE__*/_jsxDEV(Column_cmp, {\n          column: column,\n          tasks: tasks\n        }, column.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 18\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 43,\n  columnNumber: 3\n}, this), document.getElementById(\"root\"));\nreportWebVitals();","map":{"version":3,"sources":["C:/Users/liron/Desktop/FullStack/Training/todo_list_training/ToDo_List/Client/src/index.js"],"names":["React","ReactDOM","initial_data","reportWebVitals","Column_cmp","DragDropContext","App","Component","state","onDragEnd","result","destination","source","draggablId","index","column","columns","newTaskId","Array","from","taskIds","splice","render","columnOder","map","column_id","tasks","task_id","id","document","getElementById"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,YAAP,MAAyB,eAAzB;AACA,OAAO,aAAP;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AACA,SAASC,eAAT,QAAgC,qBAAhC;;AAEA,MAAMC,GAAN,SAAkBN,KAAK,CAACO,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCC,KADgC,GACxBN,YADwB;;AAAA,SAGhCO,SAHgC,GAGnBC,MAAD,IAAY;AACtB,YAAM;AAAEC,QAAAA,WAAF;AAAeC,QAAAA,MAAf;AAAuBC,QAAAA;AAAvB,UAAsCH,MAA5C;;AACA,UAAI,CAACC,WAAL,EAAkB;AAChB;AACD;;AACD,UACEA,WAAW,CAACE,UAAZ,KAA2BD,MAAM,CAACC,UAAlC,IACAF,WAAW,CAACG,KAAZ,KAAsBF,MAAM,CAACE,KAF/B,EAGE;AACA;AACD;;AACD,YAAMC,MAAM,GAAG,KAAKP,KAAL,CAAWQ,OAAX,CAAmBJ,MAAM,CAACC,UAA1B,CAAf;AACA,YAAMI,SAAS,GAAGC,KAAK,CAACC,IAAN,CAAWJ,MAAM,CAACK,OAAlB,CAAlB;AACAH,MAAAA,SAAS,CAACI,MAAV;AAED,KAlB+B;AAAA;;AAoBhCC,EAAAA,MAAM,GAAG;AACP,wBACE,QAAC,eAAD;AAAiB,MAAA,SAAS,EAAE,KAAKb,SAAjC;AAAA,gBACG,KAAKD,KAAL,CAAWe,UAAX,CAAsBC,GAAtB,CAA2BC,SAAD,IAAe;AACxC,cAAMV,MAAM,GAAG,KAAKP,KAAL,CAAWQ,OAAX,CAAmBS,SAAnB,CAAf;AAAA,cACEC,KAAK,GAAGX,MAAM,CAACK,OAAP,CAAeI,GAAf,CAAoBG,OAAD,IAAa,KAAKnB,KAAL,CAAWkB,KAAX,CAAiBC,OAAjB,CAAhC,CADV;AAEA,4BAAO,QAAC,UAAD;AAA4B,UAAA,MAAM,EAAEZ,MAApC;AAA4C,UAAA,KAAK,EAAEW;AAAnD,WAAiBX,MAAM,CAACa,EAAxB;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD,OAJA;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AASD;;AA9B+B;;AAiClC3B,QAAQ,CAACqB,MAAT,eACE,QAAC,KAAD,CAAO,UAAP;AAAA,yBACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADF,EAIEO,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJF;AAOA3B,eAAe","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport initial_data from \"./initialData\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport Column_cmp from \"./Cmps/Column_cmp\";\nimport { DragDropContext } from \"react-beautiful-dnd\";\n\nclass App extends React.Component {\n  state = initial_data;\n\n  onDragEnd = (result) => {\n    const { destination, source, draggablId } = result;\n    if (!destination) {\n      return;\n    }\n    if (\n      destination.draggablId === source.draggablId &&\n      destination.index === source.index\n    ) {\n      return;\n    }\n    const column = this.state.columns[source.draggablId]\n    const newTaskId = Array.from(column.taskIds)\n    newTaskId.splice()\n    \n  };\n\n  render() {\n    return (\n      <DragDropContext onDragEnd={this.onDragEnd}>\n        {this.state.columnOder.map((column_id) => {\n          const column = this.state.columns[column_id],\n            tasks = column.taskIds.map((task_id) => this.state.tasks[task_id]);\n          return <Column_cmp key={column.id} column={column} tasks={tasks} />;\n        })}\n      </DragDropContext>\n    );\n  }\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"]},"metadata":{},"sourceType":"module"}