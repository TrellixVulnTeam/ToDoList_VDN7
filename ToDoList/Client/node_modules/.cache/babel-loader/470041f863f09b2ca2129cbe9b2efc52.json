{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\liron\\\\Desktop\\\\FullStack\\\\Training\\\\todo_list_training\\\\ToDoList\\\\Client\\\\src\\\\Cmps\\\\ToDoList\\\\ColumnCmp.jsx\";\nimport React from \"react\";\nimport TaskCmp from \"./TaskCmp\";\nimport { Droppable } from \"react-beautiful-dnd\"; // import Divider from '@material-ui/core/Divider';\n\nexport default function ColumnCmp(props) {\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"column\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n      droppableId: props.status,\n      children: provided => /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: props.class_name,\n        ref: provided.innerRef,\n        ...provided.droppableProps,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: props.tasks_list ? props.tasks_list.map((task, index) => /*#__PURE__*/_jsxDEV(TaskCmp, {\n            task: task,\n            number: index,\n            unique_id: index + task.task_id // unique_id\n            ,\n            move: (task_id, status_task) => {\n              props.move(task_id, status_task);\n            },\n            delete: task_id => {\n              props.delete(task_id);\n            }\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 21\n          }, this)) : console.log(\"loadding\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }, this), provided.placeholder]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}\n_c = ColumnCmp;\n\nvar _c;\n\n$RefreshReg$(_c, \"ColumnCmp\");","map":{"version":3,"sources":["C:/Users/liron/Desktop/FullStack/Training/todo_list_training/ToDoList/Client/src/Cmps/ToDoList/ColumnCmp.jsx"],"names":["React","TaskCmp","Droppable","ColumnCmp","props","title","status","provided","class_name","innerRef","droppableProps","tasks_list","map","task","index","task_id","status_task","move","delete","console","log","placeholder"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,SAAT,QAA0B,qBAA1B,C,CACA;;AAGA,eAAe,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AACvC,sBACE;AAAS,IAAA,SAAS,EAAC,QAAnB;AAAA,4BACE;AAAA,gBAAKA,KAAK,CAACC;AAAX;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,SAAD;AAAW,MAAA,WAAW,EAAED,KAAK,CAACE,MAA9B;AAAA,gBACIC,QAAD,iBACC;AACE,QAAA,SAAS,EAAEH,KAAK,CAACI,UADnB;AAEE,QAAA,GAAG,EAAED,QAAQ,CAACE,QAFhB;AAAA,WAGMF,QAAQ,CAACG,cAHf;AAAA,gCAKE;AAAA,oBACGN,KAAK,CAACO,UAAN,GACGP,KAAK,CAACO,UAAN,CAAiBC,GAAjB,CAAqB,CAACC,IAAD,EAAOC,KAAP,kBACnB,QAAC,OAAD;AAEE,YAAA,IAAI,EAAED,IAFR;AAGE,YAAA,MAAM,EAAEC,KAHV;AAIE,YAAA,SAAS,EAAGA,KAAK,GAACD,IAAI,CAACE,OAJzB,CAKE;AALF;AAME,YAAA,IAAI,EAAE,CAACA,OAAD,EAAUC,WAAV,KAA0B;AAC9BZ,cAAAA,KAAK,CAACa,IAAN,CAAWF,OAAX,EAAoBC,WAApB;AACD,aARH;AASE,YAAA,MAAM,EAAGD,OAAD,IAAa;AACnBX,cAAAA,KAAK,CAACc,MAAN,CAAaH,OAAb;AACD;AAXH,aACOD,KADP;AAAA;AAAA;AAAA;AAAA,kBADF,CADH,GAgBGK,OAAO,CAACC,GAAR,CAAY,UAAZ;AAjBN;AAAA;AAAA;AAAA;AAAA,gBALF,EAwBGb,QAAQ,CAACc,WAxBZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqCD;KAtCuBlB,S","sourcesContent":["import React from \"react\";\r\nimport TaskCmp from \"./TaskCmp\";\r\nimport { Droppable } from \"react-beautiful-dnd\";\r\n// import Divider from '@material-ui/core/Divider';\r\n\r\n\r\nexport default function ColumnCmp(props) {\r\n  return (\r\n    <section className='column'>\r\n      <h3>{props.title}</h3>\r\n      \r\n      {/* <Divider>CENTER</Divider> */}\r\n      <Droppable droppableId={props.status}>\r\n        {(provided) => (\r\n          <ul\r\n            className={props.class_name}\r\n            ref={provided.innerRef}\r\n            {...provided.droppableProps}\r\n          >\r\n            <div>\r\n              {props.tasks_list\r\n                ? props.tasks_list.map((task, index) => (\r\n                    <TaskCmp\r\n                      key={index}\r\n                      task={task}\r\n                      number={index}\r\n                      unique_id ={index+task.task_id}\r\n                      // unique_id\r\n                      move={(task_id, status_task) => {\r\n                        props.move(task_id, status_task);\r\n                      }}\r\n                      delete={(task_id) => {\r\n                        props.delete(task_id);\r\n                      }}\r\n                    />\r\n                  ))\r\n                : console.log(\"loadding\")}\r\n            </div>\r\n            {provided.placeholder}\r\n          </ul>\r\n        )}\r\n      </Droppable>\r\n    </section>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}