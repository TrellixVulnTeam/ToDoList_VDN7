{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\liron\\\\Desktop\\\\FullStack\\\\Projects\\\\ToDoList-Git\\\\ToDoList\\\\ToDoList\\\\Client\\\\src\\\\Cmps\\\\ToDoList\\\\TaskCmp.jsx\";\nimport React from \"react\";\nimport { Draggable } from \"react-beautiful-dnd\";\nexport default function TaskCmp(props) {\n  const status_task = props.task.status;\n  const task_id = props.task.task_id;\n  return /*#__PURE__*/_jsxDEV(Draggable, {\n    draggableId: `${props.unique_id}`,\n    index: props.number,\n    children: provided => /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"task_card\",\n      ...provided.draggableProps,\n      ...provided.dragHandleProps,\n      ref: provided.innerRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}\n_c = TaskCmp;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskCmp\");","map":{"version":3,"sources":["C:/Users/liron/Desktop/FullStack/Projects/ToDoList-Git/ToDoList/ToDoList/Client/src/Cmps/ToDoList/TaskCmp.jsx"],"names":["React","Draggable","TaskCmp","props","status_task","task","status","task_id","unique_id","number","provided","draggableProps","dragHandleProps","innerRef"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,qBAA1B;AAEA,eAAe,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AACrC,QAAMC,WAAW,GAAGD,KAAK,CAACE,IAAN,CAAWC,MAA/B;AACA,QAAMC,OAAO,GAAGJ,KAAK,CAACE,IAAN,CAAWE,OAA3B;AAEA,sBACE,QAAC,SAAD;AAAW,IAAA,WAAW,EAAG,GAAEJ,KAAK,CAACK,SAAU,EAA3C;AAA8C,IAAA,KAAK,EAAEL,KAAK,CAACM,MAA3D;AAAA,cACIC,QAAD,iBACC;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA,SACMA,QAAQ,CAACC,cADf;AAAA,SAEMD,QAAQ,CAACE,eAFf;AAGE,MAAA,GAAG,EAAEF,QAAQ,CAACG;AAHhB;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UADF;AA+CD;KAnDuBX,O","sourcesContent":["import React from \"react\";\r\nimport { Draggable } from \"react-beautiful-dnd\";\r\n\r\nexport default function TaskCmp(props) {\r\n  const status_task = props.task.status;\r\n  const task_id = props.task.task_id;\r\n\r\n  return (\r\n    <Draggable draggableId={`${props.unique_id}`} index={props.number}>\r\n      {(provided) => (\r\n        <li className='task_card'\r\n          {...provided.draggableProps}\r\n          {...provided.dragHandleProps}\r\n          ref={provided.innerRef}\r\n        >\r\n          {/* <div\r\n            onClick={() => {\r\n              props.delete(task_id);\r\n            }}\r\n          >\r\n            delete\r\n          </div> */}\r\n          {/* <span>{props.task.title}</span>\r\n          <span>{props.task.descriptiio}</span>\r\n          <span>{props.task.date}</span> */}\r\n          {/* <div\r\n            onClick={() => {\r\n              props.move(task_id, \"done\");\r\n            }}\r\n          >\r\n            done\r\n          </div> */}\r\n          {/* <div\r\n            onClick={() => {\r\n              let value_status = \"\";\r\n              switch (status_task) {\r\n                case \"todo\":\r\n                  value_status = \"in_pragress\";\r\n                  break;\r\n                case \"in_pragress\":\r\n                  value_status = \"done\";\r\n                  break;\r\n                case \"done\":\r\n                  value_status = \"todo\";\r\n              }\r\n              props.move(task_id, value_status);\r\n            }}\r\n          >\r\n            move\r\n          </div> */}\r\n        </li>\r\n      )}\r\n    </Draggable>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}