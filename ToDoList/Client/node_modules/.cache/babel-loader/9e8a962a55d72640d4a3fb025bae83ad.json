{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\liron\\\\Desktop\\\\FullStack\\\\Training\\\\todo_list_training\\\\ToDo_List_testing\\\\Client\\\\src\\\\Cmps\\\\ToDoList\\\\TaskCmp.jsx\";\nimport React from \"react\";\nimport { Draggable } from \"react-beautiful-dnd\";\nexport default function TaskCmp(props) {\n  const status_task = props.task.status;\n  const task_id = props.task.task_id;\n  const test = JSON.stringify(props.task);\n  return /*#__PURE__*/_jsxDEV(Draggable, {\n    draggableId: test,\n    index: props.number,\n    children: provided => /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"task_li\",\n      ...provided.draggableProps,\n      ...provided.dragHandleProps,\n      ref: provided.innerRef,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => {\n          props.delete(task_id);\n        },\n        children: \"delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: props.task.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: props.task.descriptiio\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: props.task.date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => {\n          props.move(task_id, \"done\");\n        },\n        children: \"done\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => {\n          let value_status = \"\";\n\n          switch (status_task) {\n            case \"todo\":\n              value_status = \"in_pragress\";\n              break;\n\n            case \"in_pragress\":\n              value_status = \"done\";\n              break;\n\n            case \"done\":\n              value_status = \"todo\";\n          }\n\n          props.move(task_id, value_status);\n        },\n        children: \"move\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n_c = TaskCmp;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskCmp\");","map":{"version":3,"sources":["C:/Users/liron/Desktop/FullStack/Training/todo_list_training/ToDo_List_testing/Client/src/Cmps/ToDoList/TaskCmp.jsx"],"names":["React","Draggable","TaskCmp","props","status_task","task","status","task_id","test","JSON","stringify","number","provided","draggableProps","dragHandleProps","innerRef","delete","title","descriptiio","date","move","value_status"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,qBAA1B;AAEA,eAAe,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AACrC,QAAMC,WAAW,GAAGD,KAAK,CAACE,IAAN,CAAWC,MAA/B;AACA,QAAMC,OAAO,GAAGJ,KAAK,CAACE,IAAN,CAAWE,OAA3B;AACA,QAAMC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAeP,KAAK,CAACE,IAArB,CAAb;AAGA,sBACE,QAAC,SAAD;AAAW,IAAA,WAAW,EAAEG,IAAxB;AAA8B,IAAA,KAAK,EAAEL,KAAK,CAACQ,MAA3C;AAAA,cAIIC,QAAD,iBACC;AACE,MAAA,SAAS,EAAC,SADZ;AAAA,SAEMA,QAAQ,CAACC,cAFf;AAAA,SAGMD,QAAQ,CAACE,eAHf;AAIE,MAAA,GAAG,EAAEF,QAAQ,CAACG,QAJhB;AAAA,8BAME;AACE,QAAA,OAAO,EAAE,MAAM;AACbZ,UAAAA,KAAK,CAACa,MAAN,CAAaT,OAAb;AACD,SAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANF,eAaE;AAAA,kBAAOJ,KAAK,CAACE,IAAN,CAAWY;AAAlB;AAAA;AAAA;AAAA;AAAA,cAbF,eAcE;AAAA,kBAAOd,KAAK,CAACE,IAAN,CAAWa;AAAlB;AAAA;AAAA;AAAA;AAAA,cAdF,eAeE;AAAA,kBAAOf,KAAK,CAACE,IAAN,CAAWc;AAAlB;AAAA;AAAA;AAAA;AAAA,cAfF,eAgBE;AACE,QAAA,OAAO,EAAE,MAAM;AACbhB,UAAAA,KAAK,CAACiB,IAAN,CAAWb,OAAX,EAAoB,MAApB;AACD,SAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBF,eAuBE;AACE,QAAA,OAAO,EAAE,MAAM;AACb,cAAIc,YAAY,GAAG,EAAnB;;AACA,kBAAQjB,WAAR;AACE,iBAAK,MAAL;AACEiB,cAAAA,YAAY,GAAG,aAAf;AACA;;AACF,iBAAK,aAAL;AACEA,cAAAA,YAAY,GAAG,MAAf;AACA;;AACF,iBAAK,MAAL;AACEA,cAAAA,YAAY,GAAG,MAAf;AARJ;;AAUAlB,UAAAA,KAAK,CAACiB,IAAN,CAAWb,OAAX,EAAoBc,YAApB;AACD,SAdH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAvBF;AAAA;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA,UADF;AAmDD;KAzDuBnB,O","sourcesContent":["import React from \"react\";\r\nimport { Draggable } from \"react-beautiful-dnd\";\r\n\r\nexport default function TaskCmp(props) {\r\n  const status_task = props.task.status;\r\n  const task_id = props.task.task_id;\r\n  const test = JSON.stringify(props.task);\r\n  \r\n\r\n  return (\r\n    <Draggable draggableId={test} index={props.number}>\r\n    {/* <Draggable draggableId={`${props.number}`} index={props.number}>  */}\r\n    {/* <Draggable draggableId={`${task_id}`} index={props.number}> */}\r\n  \r\n      {(provided) => (\r\n        <li\r\n          className=\"task_li\"\r\n          {...provided.draggableProps}\r\n          {...provided.dragHandleProps}\r\n          ref={provided.innerRef}\r\n        >\r\n          <div\r\n            onClick={() => {\r\n              props.delete(task_id);\r\n            }}\r\n          >\r\n            delete\r\n          </div>\r\n          <span>{props.task.title}</span>\r\n          <span>{props.task.descriptiio}</span>\r\n          <span>{props.task.date}</span>\r\n          <div\r\n            onClick={() => {\r\n              props.move(task_id, \"done\");\r\n            }}\r\n          >\r\n            done\r\n          </div>\r\n          <div\r\n            onClick={() => {\r\n              let value_status = \"\";\r\n              switch (status_task) {\r\n                case \"todo\":\r\n                  value_status = \"in_pragress\";\r\n                  break;\r\n                case \"in_pragress\":\r\n                  value_status = \"done\";\r\n                  break;\r\n                case \"done\":\r\n                  value_status = \"todo\";\r\n              }\r\n              props.move(task_id, value_status);\r\n            }}\r\n          >\r\n            move\r\n          </div>\r\n        </li>\r\n      )}\r\n    </Draggable>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}