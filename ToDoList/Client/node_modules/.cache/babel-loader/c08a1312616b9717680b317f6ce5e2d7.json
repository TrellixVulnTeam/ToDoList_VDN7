{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\liron\\\\Desktop\\\\FullStack\\\\Training\\\\todo_list_training\\\\ToDo_List_testing\\\\Client\\\\src\\\\Cmps\\\\ToDoList\\\\ColumnCmp.jsx\";\nimport React from \"react\";\nimport TaskCmp from \"./TaskCmp\";\nimport { Droppable } from \"react-beautiful-dnd\";\nexport default function ColumnCmp(props) {\n  return /*#__PURE__*/_jsxDEV(Droppable, {\n    droppableId: props.class_name,\n    children: provided = /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: props.class_name,\n      innerRef: provided.innerRef,\n      ...provided.droppableProps,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: props.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [props.tasks_list ? props.tasks_list.map((task, index) => /*#__PURE__*/_jsxDEV(TaskCmp, {\n          task: task,\n          number: index // move={(task_id, status_task) => {\n          //   props.move(task_id, status_task);\n          // }}\n          // delete={(task_id) => {\n          //   props.delete(task_id);\n          // }}\n\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 23\n        }, this)) : console.log(\"loadding\"), provided.placeholder]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n} // export default function ColumnCmp(props) {\n//   return (\n//     <ul className={props.class_name}>\n//       <h3>{props.title}</h3>\n//       <Droppable droppableId={props.class_name}>\n//         {(provided) => (\n//           <div innerRef={provided.innerRef} {...provided.droppableProps}>\n//             {props.tasks_list\n//               ? props.tasks_list.map((task, index) => (\n//                   <TaskCmp\n//                     key={index}\n//                     task={task}\n//                     number={index}\n//                     // move={(task_id, status_task) => {\n//                     //   props.move(task_id, status_task);\n//                     // }}\n//                     // delete={(task_id) => {\n//                     //   props.delete(task_id);\n//                     // }}\n//                   />\n//                 ))\n//               : console.log(\"loadding\")}\n//             {provided.placeholder}\n//           </div>\n//         )}\n//       </Droppable>\n//     </ul>\n//   );\n// }\n\n_c = ColumnCmp;\n\nvar _c;\n\n$RefreshReg$(_c, \"ColumnCmp\");","map":{"version":3,"sources":["C:/Users/liron/Desktop/FullStack/Training/todo_list_training/ToDo_List_testing/Client/src/Cmps/ToDoList/ColumnCmp.jsx"],"names":["React","TaskCmp","Droppable","ColumnCmp","props","class_name","provided","innerRef","droppableProps","title","tasks_list","map","task","index","console","log","placeholder"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,SAAT,QAA0B,qBAA1B;AAEA,eAAe,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AACvC,sBACE,QAAC,SAAD;AAAW,IAAA,WAAW,EAAEA,KAAK,CAACC,UAA9B;AAAA,cAEKC,QAAQ,gBACP;AAAI,MAAA,SAAS,EAAEF,KAAK,CAACC,UAArB;AAAiC,MAAA,QAAQ,EAAEC,QAAQ,CAACC,QAApD;AAAA,SAAkED,QAAQ,CAACE,cAA3E;AAAA,8BACE;AAAA,kBAAKJ,KAAK,CAACK;AAAX;AAAA;AAAA;AAAA;AAAA,cADF,eAGI;AAAA,mBACGL,KAAK,CAACM,UAAN,GACGN,KAAK,CAACM,UAAN,CAAiBC,GAAjB,CAAqB,CAACC,IAAD,EAAOC,KAAP,kBACnB,QAAC,OAAD;AAEE,UAAA,IAAI,EAAED,IAFR;AAGE,UAAA,MAAM,EAAEC,KAHV,CAIE;AACA;AACA;AACA;AACA;AACA;;AATF,WACOA,KADP;AAAA;AAAA;AAAA;AAAA,gBADF,CADH,GAcGC,OAAO,CAACC,GAAR,CAAY,UAAZ,CAfN,EAgBGT,QAAQ,CAACU,WAhBZ;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAHN;AAAA;AAAA;AAAA;AAAA,UADF;AAsDD,C,CAED;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;KAtFwBb,S","sourcesContent":["import React from \"react\";\r\nimport TaskCmp from \"./TaskCmp\";\r\nimport { Droppable } from \"react-beautiful-dnd\";\r\n\r\nexport default function ColumnCmp(props) {\r\n  return (\r\n    <Droppable droppableId={props.class_name}>\r\n      {\r\n        (provided = (\r\n          <ul className={props.class_name} innerRef={provided.innerRef} {...provided.droppableProps}>\r\n            <h3>{props.title}</h3>\r\n          \r\n              <div >\r\n                {props.tasks_list\r\n                  ? props.tasks_list.map((task, index) => (\r\n                      <TaskCmp\r\n                        key={index}\r\n                        task={task}\r\n                        number={index}\r\n                        // move={(task_id, status_task) => {\r\n                        //   props.move(task_id, status_task);\r\n                        // }}\r\n                        // delete={(task_id) => {\r\n                        //   props.delete(task_id);\r\n                        // }}\r\n                      />\r\n                    ))\r\n                  : console.log(\"loadding\")}\r\n                {provided.placeholder}\r\n              </div>\r\n            \r\n          </ul>\r\n        ))\r\n      }\r\n      {/* <ul className={props.class_name}>\r\n        <h3>{props.title}</h3>\r\n        {(provided) => (\r\n          <div innerRef={provided.innerRef} {...provided.droppableProps}>\r\n            {props.tasks_list\r\n              ? props.tasks_list.map((task, index) => (\r\n                  <TaskCmp\r\n                    key={index}\r\n                    task={task}\r\n                    number={index}\r\n                    // move={(task_id, status_task) => {\r\n                    //   props.move(task_id, status_task);\r\n                    // }}\r\n                    // delete={(task_id) => {\r\n                    //   props.delete(task_id);\r\n                    // }}\r\n                  />\r\n                ))\r\n              : console.log(\"loadding\")}\r\n            {provided.placeholder}\r\n          </div>\r\n        )}\r\n      </ul> */}\r\n    </Droppable>\r\n  );\r\n}\r\n\r\n// export default function ColumnCmp(props) {\r\n//   return (\r\n\r\n//     <ul className={props.class_name}>\r\n//       <h3>{props.title}</h3>\r\n//       <Droppable droppableId={props.class_name}>\r\n//         {(provided) => (\r\n//           <div innerRef={provided.innerRef} {...provided.droppableProps}>\r\n//             {props.tasks_list\r\n//               ? props.tasks_list.map((task, index) => (\r\n//                   <TaskCmp\r\n//                     key={index}\r\n//                     task={task}\r\n//                     number={index}\r\n//                     // move={(task_id, status_task) => {\r\n//                     //   props.move(task_id, status_task);\r\n//                     // }}\r\n//                     // delete={(task_id) => {\r\n//                     //   props.delete(task_id);\r\n//                     // }}\r\n//                   />\r\n//                 ))\r\n//               : console.log(\"loadding\")}\r\n//             {provided.placeholder}\r\n//           </div>\r\n//         )}\r\n//       </Droppable>\r\n//     </ul>\r\n//   );\r\n// }\r\n"]},"metadata":{},"sourceType":"module"}