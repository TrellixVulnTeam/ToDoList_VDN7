{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\liron\\\\Desktop\\\\FullStack\\\\Training\\\\todo_list_training\\\\ToDo_List\\\\Client\\\\src\\\\index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport initial_data from \"./initialData\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport Column_cmp from \"./Cmps/Column_cmp\";\nimport { DragDropContext } from \"react-beautiful-dnd\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = initial_data;\n\n    this.onDragEnd = result => {\n      const {\n        destination,\n        source,\n        draggableId\n      } = result;\n\n      if (!destination) {\n        return;\n      }\n\n      if (destination.droppableId === source.droppableId && destination.index === source.index) {\n        return;\n      }\n\n      const start = this.state.columns[source.droppableId];\n      const finsh = this.state.columns[destination.droppableId];\n\n      if (start === finsh) {\n        const newTaskId = Array.from(column.taskIds);\n        newTaskId.splice(source.index, 1);\n        newTaskId.splice(destination.index, 0, draggableId);\n        const newColumn = { ...column,\n          taskIds: newTaskId\n        };\n        const newState = { ...this.state,\n          columns: { ...this.state.columns,\n            [newColumn.id]: newColumn\n          }\n        };\n        this.setState(newState);\n        return;\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: this.onDragEnd,\n      children: this.state.columnOder.map(column_id => {\n        const column = this.state.columns[column_id],\n              tasks = column.taskIds.map(task_id => this.state.tasks[task_id]);\n        return /*#__PURE__*/_jsxDEV(Column_cmp, {\n          column: column,\n          tasks: tasks\n        }, column.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 18\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 68,\n  columnNumber: 3\n}, this), document.getElementById(\"root\"));\nreportWebVitals();","map":{"version":3,"sources":["C:/Users/liron/Desktop/FullStack/Training/todo_list_training/ToDo_List/Client/src/index.js"],"names":["React","ReactDOM","initial_data","reportWebVitals","Column_cmp","DragDropContext","App","Component","state","onDragEnd","result","destination","source","draggableId","droppableId","index","start","columns","finsh","newTaskId","Array","from","column","taskIds","splice","newColumn","newState","id","setState","render","columnOder","map","column_id","tasks","task_id","document","getElementById"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,YAAP,MAAyB,eAAzB;AACA,OAAO,aAAP;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AACA,SAASC,eAAT,QAAgC,qBAAhC;;AAEA,MAAMC,GAAN,SAAkBN,KAAK,CAACO,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCC,KADgC,GACxBN,YADwB;;AAAA,SAGhCO,SAHgC,GAGnBC,MAAD,IAAY;AACtB,YAAM;AAAEC,QAAAA,WAAF;AAAeC,QAAAA,MAAf;AAAuBC,QAAAA;AAAvB,UAAuCH,MAA7C;;AAEA,UAAI,CAACC,WAAL,EAAkB;AAChB;AACD;;AAED,UACEA,WAAW,CAACG,WAAZ,KAA4BF,MAAM,CAACE,WAAnC,IACAH,WAAW,CAACI,KAAZ,KAAsBH,MAAM,CAACG,KAF/B,EAGE;AACA;AACD;;AAED,YAAMC,KAAK,GAAG,KAAKR,KAAL,CAAWS,OAAX,CAAmBL,MAAM,CAACE,WAA1B,CAAd;AACA,YAAMI,KAAK,GAAG,KAAKV,KAAL,CAAWS,OAAX,CAAmBN,WAAW,CAACG,WAA/B,CAAd;;AAEA,UAAIE,KAAK,KAAKE,KAAd,EAAqB;AACnB,cAAMC,SAAS,GAAGC,KAAK,CAACC,IAAN,CAAWC,MAAM,CAACC,OAAlB,CAAlB;AAEAJ,QAAAA,SAAS,CAACK,MAAV,CAAiBZ,MAAM,CAACG,KAAxB,EAA+B,CAA/B;AACAI,QAAAA,SAAS,CAACK,MAAV,CAAiBb,WAAW,CAACI,KAA7B,EAAoC,CAApC,EAAuCF,WAAvC;AAEA,cAAMY,SAAS,GAAG,EAChB,GAAGH,MADa;AAEhBC,UAAAA,OAAO,EAAEJ;AAFO,SAAlB;AAKA,cAAMO,QAAQ,GAAG,EACf,GAAG,KAAKlB,KADO;AAEfS,UAAAA,OAAO,EAAE,EACP,GAAG,KAAKT,KAAL,CAAWS,OADP;AAEP,aAACQ,SAAS,CAACE,EAAX,GAAgBF;AAFT;AAFM,SAAjB;AAOA,aAAKG,QAAL,CAAcF,QAAd;AACA;AACD;AAGF,KA3C+B;AAAA;;AA6ChCG,EAAAA,MAAM,GAAG;AACP,wBACE,QAAC,eAAD;AAAiB,MAAA,SAAS,EAAE,KAAKpB,SAAjC;AAAA,gBACG,KAAKD,KAAL,CAAWsB,UAAX,CAAsBC,GAAtB,CAA2BC,SAAD,IAAe;AACxC,cAAMV,MAAM,GAAG,KAAKd,KAAL,CAAWS,OAAX,CAAmBe,SAAnB,CAAf;AAAA,cACEC,KAAK,GAAGX,MAAM,CAACC,OAAP,CAAeQ,GAAf,CAAoBG,OAAD,IAAa,KAAK1B,KAAL,CAAWyB,KAAX,CAAiBC,OAAjB,CAAhC,CADV;AAEA,4BAAO,QAAC,UAAD;AAA4B,UAAA,MAAM,EAAEZ,MAApC;AAA4C,UAAA,KAAK,EAAEW;AAAnD,WAAiBX,MAAM,CAACK,EAAxB;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD,OAJA;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AASD;;AAvD+B;;AA0DlC1B,QAAQ,CAAC4B,MAAT,eACE,QAAC,KAAD,CAAO,UAAP;AAAA,yBACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADF,EAIEM,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJF;AAOAjC,eAAe","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport initial_data from \"./initialData\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport Column_cmp from \"./Cmps/Column_cmp\";\nimport { DragDropContext } from \"react-beautiful-dnd\";\n\nclass App extends React.Component {\n  state = initial_data;\n\n  onDragEnd = (result) => {\n    const { destination, source, draggableId } = result;\n\n    if (!destination) {\n      return;\n    }\n\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    ) {\n      return;\n    }\n\n    const start = this.state.columns[source.droppableId];\n    const finsh = this.state.columns[destination.droppableId];\n\n    if (start === finsh) {\n      const newTaskId = Array.from(column.taskIds);\n\n      newTaskId.splice(source.index, 1);\n      newTaskId.splice(destination.index, 0, draggableId);\n\n      const newColumn = {\n        ...column,\n        taskIds: newTaskId,\n      };\n\n      const newState = {\n        ...this.state,\n        columns: {\n          ...this.state.columns,\n          [newColumn.id]: newColumn,\n        },\n      };\n      this.setState(newState);\n      return\n    }\n\n\n  };\n\n  render() {\n    return (\n      <DragDropContext onDragEnd={this.onDragEnd}>\n        {this.state.columnOder.map((column_id) => {\n          const column = this.state.columns[column_id],\n            tasks = column.taskIds.map((task_id) => this.state.tasks[task_id]);\n          return <Column_cmp key={column.id} column={column} tasks={tasks} />;\n        })}\n      </DragDropContext>\n    );\n  }\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"]},"metadata":{},"sourceType":"module"}